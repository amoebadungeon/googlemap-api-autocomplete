// import PlacesAutocomplete, {
//     geocodeByAddress,
//     getLatLng,
//   } from 'react-places-autocomplete';

  const [address, setAddress] = useState('');
  
const handleSelect = async (value) => {
        try {
          const results = await geocodeByAddress(value);
          const latLng = await getLatLng(results[0]);
      
          setAddress(value);
          const newSelectedPlace = {
            address: value,
            geometry: {
              location: {
                lat: latLng.lat,
                lng: latLng.lng,
              },
            },
          };
          setSelectedPlace(newSelectedPlace);
          console.log('Results from geocoding:', results);
          console.log('Selected Place:', newSelectedPlace);
        } catch (error) {
          console.error('Error selecting place:', error);
        }
      };
      

<PlacesAutocomplete
        
          value={address}
          onChange={setAddress}
          onSelect={handleSelect}
        >
          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (
            <div>
              <input {...getInputProps({ placeholder: 'Type address' })} />
              <div>
                {loading ? <div>Loading...</div> : null}

                {suggestions.map((suggestion) => {
                  const style = {
                    backgroundColor: suggestion.active ? '#41b6e6' : '#fff',
                  };
                  return (
                    <div key={suggestion.id}{...getSuggestionItemProps(suggestion, { style })}>
                      {suggestion.description}
                    </div>
                  );
                })}
              </div>
            </div>
          )}
        </PlacesAutocomplete>